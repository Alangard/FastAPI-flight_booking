"""Initial migration

Revision ID: 013112386b0c
Revises: 
Create Date: 2024-07-24 15:06:10.664006

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '013112386b0c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('airlines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('logo_url', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_airlines_id'), 'airlines', ['id'], unique=False)
    op.create_index(op.f('ix_airlines_name'), 'airlines', ['name'], unique=False)
    op.create_table('airports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('country', sa.String(), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_airports_code'), 'airports', ['code'], unique=True)
    op.create_index(op.f('ix_airports_id'), 'airports', ['id'], unique=False)
    op.create_index(op.f('ix_airports_name'), 'airports', ['name'], unique=False)
    op.create_table('passengers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('passenger_type', sa.Enum('ADULT', 'CHILDREN', 'BABY', name='passengertype'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_passengers_email'), 'passengers', ['email'], unique=True)
    op.create_index(op.f('ix_passengers_id'), 'passengers', ['id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('guid', sa.UUID(), nullable=False),
    sa.Column('password', sa.String(length=25), nullable=False),
    sa.Column('first_name', sa.String(length=150), nullable=False),
    sa.Column('last_name', sa.String(length=150), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('telegram_id', sa.Integer(), nullable=True),
    sa.Column('telegram_username', sa.String(length=32), nullable=True),
    sa.Column('user_image', sa.String(length=1048), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('guid'),
    sa.UniqueConstraint('phone_number'),
    sa.UniqueConstraint('telegram_username')
    )
    op.create_index(op.f('ix_user_last_name'), 'user', ['last_name'], unique=False)
    op.create_index(op.f('ix_user_telegram_id'), 'user', ['telegram_id'], unique=False)
    op.create_table('flights',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('airline_id', sa.Integer(), nullable=False),
    sa.Column('departure_airport_id', sa.Integer(), nullable=False),
    sa.Column('arrival_airport_id', sa.Integer(), nullable=False),
    sa.Column('departure', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('arrival', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.ForeignKeyConstraint(['airline_id'], ['airlines.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['arrival_airport_id'], ['airports.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['departure_airport_id'], ['airports.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_flights_id'), 'flights', ['id'], unique=False)
    op.create_table('seats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('flight_id', sa.Integer(), nullable=False),
    sa.Column('flight_grade', sa.Enum('ECONOMY', 'COMFORT', 'BUSINESS', 'FIRST_CLASS', name='flightgrade'), nullable=False),
    sa.Column('is_available', sa.Boolean(), nullable=False),
    sa.Column('row_number', sa.Integer(), nullable=False),
    sa.Column('column_number', sa.String(), nullable=False),
    sa.Column('seat_number', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.ForeignKeyConstraint(['flight_id'], ['flights.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_seats_id'), 'seats', ['id'], unique=False)
    op.create_index(op.f('ix_seats_seat_number'), 'seats', ['seat_number'], unique=False)
    op.create_table('tickets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('flight_id', sa.Integer(), nullable=False),
    sa.Column('passenger_id', sa.Integer(), nullable=True),
    sa.Column('baggage_weight', sa.Integer(), nullable=False),
    sa.Column('baggage_price', sa.Float(), nullable=False),
    sa.Column('ticket_price', sa.Float(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.ForeignKeyConstraint(['flight_id'], ['flights.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['passenger_id'], ['passengers.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tickets_id'), 'tickets', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tickets_id'), table_name='tickets')
    op.drop_table('tickets')
    op.drop_index(op.f('ix_seats_seat_number'), table_name='seats')
    op.drop_index(op.f('ix_seats_id'), table_name='seats')
    op.drop_table('seats')
    op.drop_index(op.f('ix_flights_id'), table_name='flights')
    op.drop_table('flights')
    op.drop_index(op.f('ix_user_telegram_id'), table_name='user')
    op.drop_index(op.f('ix_user_last_name'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_passengers_id'), table_name='passengers')
    op.drop_index(op.f('ix_passengers_email'), table_name='passengers')
    op.drop_table('passengers')
    op.drop_index(op.f('ix_airports_name'), table_name='airports')
    op.drop_index(op.f('ix_airports_id'), table_name='airports')
    op.drop_index(op.f('ix_airports_code'), table_name='airports')
    op.drop_table('airports')
    op.drop_index(op.f('ix_airlines_name'), table_name='airlines')
    op.drop_index(op.f('ix_airlines_id'), table_name='airlines')
    op.drop_table('airlines')
    # ### end Alembic commands ###
